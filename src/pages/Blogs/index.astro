---
import BaseLayout from "../../layouts/home.astro"
import BlogCards from "../../components/blog/BlogCards.astro"
import blogData from '../../data/blog.json';

let allBlogs = blogData;
// const allPosts = allBlogs.sort((a, b) => new Date(b.publishDate) - new Date(a.publishDate));
let checkLocal = 0;
let arr1 = [];
let arr2 = [];
let arr3 = [];
allBlogs.forEach((item,i)=>{
  checkLocal = checkLocal + 1;
  if(checkLocal===1) {
    arr1 = [item,...arr1];
  } else if (checkLocal===2) {
    arr2 = [item,...arr2];
  } else {
    arr3 = [item,...arr3];
    checkLocal = 0;
  }
});

// checkLocal = 0;
// let barr1 = [];
// let barr2 = [];

// allBlogs.forEach((item,i)=>{
//   checkLocal = checkLocal + 1;
//   if(checkLocal===1) {
//     barr1 = [item,...arr1];
//   } else {
//     barr2 = [item,...arr3];
//     checkLocal = 2;
//   }
// });

---
<BaseLayout 
    title="Sukhpreet Singh Web developer" 
    description="My personel portfolio to show recuriter how able I am to do stuff ." 
    classes1="flex selection:bg-lightBlue-500/10 selection:text-lightBlue-600 items-center flex-col bg-blueGray-1000 min-h-[100vh] font-jetMono"
  >
    <section class="py-20 px-10">
      <article>
        <div class="text-4xl flex place-content-between font-black text-white">
          <h1> What to read ! </h1>
            <button class="relative hover:bg-white group hover:text-lightBlue-500 flex items-center justify-center w-8 h-8 focus:ring focus:ring-offset-2 rounded-xl transition-colors ease-in-out">
                <p class="top-0 text-white text-left opacity-0 group-focus:opacity-100 group-hover:opacity-100 -left-24 w-max absolute text-base transition-opacity">l:line<br>e:example</p>
                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 inline" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
            </button>
        </div>
        <!-- Future Feauture Giving options to person who visit this website -->
        <!-- <div class="flex gap-x-4 flex-row mt-6 mx-10">
          <button class="px-2 py-1 border-2 border-transparent bg-orange-500/10 hover:border-orange-500 text-orange-500 rounded-xl transition-colors">svelte</button>
          <button class="px-2 py-1 border-2 border-transparent bg-lightBlue-500/10 hover:border-lightBlue-500 text-lightBlue-500 rounded-xl transition-colors">react</button>
          <button class="px-2 py-1 border-2 border-transparent bg-lime-500/10 hover:border-lime-500 text-lime-500 rounded-xl transition-colors">vue</button>
        </div> -->
      </article>
      <article id="Blogs-Grid" class="flex select-none justify-center flex-wrap">
        <div id="col-1" class="flex flex-col gap-10 mx-6 text-left mt-10">
          <BlogCards allProjects={arr1}/>
        </div>
        <div id="col-2" class="flex flex-col gap-10 mx-6 text-left mt-10">
          <BlogCards allProjects={arr2}/>
        </div>
        <div id="col-1" class="flex flex-col gap-10 mx-6 text-left mt-10">
          <BlogCards allProjects={arr3}/>
        </div>
      <article/>
    </section>
  <script slot="bottomScript" >
    let element;
    let textAle = {} ;
    let buttonAle = {};
    let textAleElements = {};
    let buttonAleElements = {};
    document.querySelectorAll('#BlogCardButton').forEach((element,i)=>{
      buttonAleElements[i] = element;
      element.classList.add('hidden');
    });
    document.querySelectorAll('#BlogCardText').forEach((element,i)=>{
      textAleElements[i] = element;
      element.classList.add('hidden');
    });
    document.querySelectorAll('#BlogCard').forEach((element,i)=>{
      element.addEventListener('mouseenter',()=>{
        textAleElements[i].classList.remove('hidden');
        buttonAleElements[i].classList.remove('hidden');
        // If textAle is undefined then button ALe is also undefined 
        if( textAle[i] === undefined ){
          textAle[i] = textAleElements[i].animate(
            [
              {
                maxHeight: '0px',
                opacity:'0',
                paddingTop:'0',
                paddingBottom:'0'
              },
              {
                maxHeight: '600px',
                opacity:'1',
                paddingTop:'12px',
                paddingBottom:'12px'
              },
            ],
            {
              direction: 'normal',
              fill: 'both',
              duration: 500,
              easing:'cubic-bezier(0.52, 0.16, 0.24, 1)'
            });
            buttonAle[i] = buttonAleElements[i].animate(
            [
              {
                maxHeight: '0px',
                opacity:'0',
                paddingTop:'0',
                paddingBottom:'0'
              },
              {
                maxHeight: '100px',
                opacity:'1',
                paddingTop:'8px',
                paddingBottom:'8px'
              },
            ],
            {
              direction: 'normal',
              fill: 'both',
              duration: 500,
              easing:'cubic-bezier(0.52, 0.16, 0.24, 1)'
            });
          }
        textAle[i].playbackRate = +1;
        buttonAle[i].playbackRate = +1;
        textAle[i].ready.then(()=>{
          textAle[i].play();
        })
        buttonAle[i].ready.then(()=>{
          buttonAle[i].play();
        })
      },false);
      element.addEventListener('mouseleave',()=>{      
        textAle[i].playbackRate = -1;
        buttonAle[i].playbackRate = -1;
        textAle[i].play();
        buttonAle[i].play();
        textAle[i].onfinish = function() {
          if(textAle[i].playbackRate===-1){
            textAleElements[i].classList.add('hidden');
            buttonAleElements[i].classList.add('hidden');
          }
        }
      });
    });
  </script>
</BaseLayout>
